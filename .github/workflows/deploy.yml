name: Deploy # ONLY FRONTEND

on:
  push:
    branches:
      - main

env: # Global environment variables
  # Website URLs
  # REACT_APP_FRONTEND_URL: "http://localhost:3000"
  # REACT_APP_BACKEND_URL: "http://localhost:4000"
  # REACT_APP_ADMIN_URL: "http://localhost:5000"

  # Social Media
  REACT_APP_FACEBOOK: "https://facebook.com/IssyCC"
  REACT_APP_YOUTUBE: "https://www.youtube.com/channel/UCT0ZOk1ORNepZtu7E0IQaCQ/"
  REACT_APP_INSTAGRAM: "https://www.instagram.com/IssaquahChristian/"

  # Contact Info
  REACT_APP_ADDRESS: "10328 Issaquah-Hobart Rd SE, Issaquah, WA 98027"
  REACT_APP_ADDRESS_URL: "https://maps.app.goo.gl/9SGwb8z93WtezKxv6"

  REACT_APP_EMAIL: "office@issaquah.cc"

  REACT_APP_PHONE: "4253925848"
  REACT_APP_PHONE_FORMATTED: "(425) 392-5848"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies for frontend
        working-directory: frontend
        run: npm install

      - name: Build frontend project
        working-directory: frontend
        run: npm run build

      - name: Prepare directories for deployment
        run: |
          mkdir -p ./dist/frontend
          cp -R frontend/build/* ./dist/frontend/
          touch ./dist/frontend/.nojekyll

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Create directory
        run: mkdir -p ./dist

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./dist

      - name: Prepare directories for deployment
        run: |
          mkdir -p gh-pages/frontend
          if [ -d ./dist/frontend ] && [ "$(ls -A ./dist/frontend)" ]; then
            cp -R ./dist/frontend/* gh-pages/
          else
            echo "Warning: ./dist/frontend is empty or does not exist"
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages

# name: Deploy # ONLY FRONTEND

# on:
#   push:
#     branches:
#       - main

# env: # Global environment variables
#   # Website URLs
#   # REACT_APP_FRONTEND_URL: "http://localhost:3000"
#   # REACT_APP_BACKEND_URL: "http://localhost:4000"
#   # REACT_APP_ADMIN_URL: "http://localhost:5000"

#   # Social Media
#   REACT_APP_FACEBOOK: "https://facebook.com/IssyCC"
#   REACT_APP_YOUTUBE: "https://www.youtube.com/channel/UCT0ZOk1ORNepZtu7E0IQaCQ/"
#   REACT_APP_INSTAGRAM: "https://www.instagram.com/IssaquahChristian/"

#   # Contact Info
#   REACT_APP_ADDRESS: "10328 Issaquah-Hobart Rd SE, Issaquah, WA 98027"
#   REACT_APP_ADDRESS_URL: "https://maps.app.goo.gl/9SGwb8z93WtezKxv6"

#   REACT_APP_EMAIL: "office@issaquah.cc"

#   REACT_APP_PHONE: "4253925848"
#   REACT_APP_PHONE_FORMATTED: "(425) 392-5848"

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3

#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20'

#       - name: Install dependencies for frontend
#         working-directory: frontend
#         run: npm install

#       - name: Build frontend project
#         working-directory: frontend
#         run: npm run build

#       - name: Prepare directories for deployment # Create directories for deployment
#         run: |
#           mkdir -p ./dist/frontend
#           cp -R frontend/dist/* ./dist/frontend/
#           touch ./dist/frontend/.nojekyll

#       - name: Upload production-ready build files
#         uses: actions/upload-artifact@v4
#         with:
#           name: production-files
#           path: ./dist # gh-pages/

#   deploy:
#     name: Deploy
#     needs: build
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Create directory
#         run: mkdir -p ./dist # gh-pages

#       - name: Download artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: production-files
#           path: ./dist # gh-pages/

#       - name: Prepare directories for deployment
#         # frontend/ (TAKEN OUT TO MOVE TO GH-PAGES ROOT)
#         run: |
#           mkdir -p gh-pages/frontend
#           if [ -d ./dist/frontend ] && [ "$(ls -A ./dist/frontend)" ]; then
#             cp -R ./dist/frontend/* gh-pages/
#           else
#             echo "Warning: ./dist/frontend is empty or does not exist"
#           fi
#         #   touch gh-pages/frontend/.nojekyll
        

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./gh-pages

# # ORIGINAL ( Both Frontend AND Admin ) ----------------------------------------------

# # name: Deploy

# # on:
# #   push:
# #     branches:
# #       - deployment-tests

# # env: # Global environment variables
# # #   NODE_ENV: 'production'
# # #   ANOTHER_VAR: 'value'
# #   VITE_FRONTEND_URL: "https://food-delivery.skylergconley.com/"
# #   VITE_ADMIN_URL: "https://food-delivery.skylergconley.com/admin/"
# #   VITE_BACKEND_URL: "https://food-delivery-api-nx22.onrender.com"

# # jobs:
# #   build:
# #     name: Build
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Checkout repo
# #         uses: actions/checkout@v3

# #       - name: Setup Node
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: '20'

# #     #   - name: Load environment variables
# #     #     run: |
# #     #         echo "VITE_FRONTEND_URL=${{ secrets.VITE_FRONTEND_URL }}" >> $GITHUB_ENV
# #     #         echo "VITE_ADMIN_URL=${{ secrets.VITE_ADMIN_URL }}" >> $GITHUB_ENV
# #     #         echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> $GITHUB_ENV

# #       - name: Install dependencies for frontend
# #         working-directory: frontend
# #         run: npm install

# #       - name: Build frontend project
# #         working-directory: frontend
# #         run: npm run build

# #       - name: Install dependencies for admin
# #         working-directory: admin
# #         run: npm install

# #       - name: Build admin project
# #         working-directory: admin
# #         run: npm run build

# #       - name: Prepare directories for deployment # Create directories for deployment
# #         run: |
# #           mkdir -p ./dist/frontend
# #           mkdir -p ./dist/admin
# #           cp -R frontend/dist/* ./dist/frontend/
# #           cp -R admin/dist/* ./dist/admin/
# #           touch ./dist/frontend/.nojekyll
# #           touch ./dist/admin/.nojekyll

# #       - name: Upload production-ready build files
# #         uses: actions/upload-artifact@v4
# #         with:
# #           name: production-files
# #           path: ./dist # gh-pages/

# #   deploy:
# #     name: Deploy
# #     needs: build
# #     runs-on: ubuntu-latest
# #     if: github.ref == 'refs/heads/deployment-tests'

# #     steps:
# #       - name: Create directory
# #         run: mkdir -p ./dist # gh-pages

# #       - name: Download artifact
# #         uses: actions/download-artifact@v4
# #         with:
# #           name: production-files
# #           path: ./dist # gh-pages/

# #       - name: Prepare directories for deployment
# #         # frontend/ (TAKEN OUT TO MOVE TO GH-PAGES ROOT)
# #         run: |
# #           mkdir -p gh-pages/frontend
# #           if [ -d ./dist/frontend ] && [ "$(ls -A ./dist/frontend)" ]; then
# #             cp -R ./dist/frontend/* gh-pages/
# #           else
# #             echo "Warning: ./dist/frontend is empty or does not exist"
# #           fi
# #           mkdir -p gh-pages/admin
# #           if [ -d ./dist/admin ] && [ "$(ls -A ./dist/admin)" ]; then
# #             cp -R ./dist/admin/* gh-pages/admin/
# #           else
# #             echo "Warning: ./dist/admin is empty or does not exist"
# #           fi
# #         #   touch gh-pages/frontend/.nojekyll
# #         #   touch gh-pages/admin/.nojekyll
        

# #       - name: Deploy to GitHub Pages
# #         uses: peaceiris/actions-gh-pages@v3
# #         with:
# #           github_token: ${{ secrets.GITHUB_TOKEN }}
# #           publish_dir: ./gh-pages